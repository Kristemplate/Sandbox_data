setwd("C:/Users/ct886924/Documents/STUDIES/Study1_MT/Simon_data/Simon_data")
setwd("C:/Users/ct886924/Documents/STUDIES/Study1_MT/Simon_data/Full_dataset")
simondata=read.csv("Full_simondata_set.csv")
setwd("C:/Users/ct886924/Documents/STUDIES/Study1_MT/Simon_data/Full_dataset")
simondata=read.csv("Full_simondata_set.csv")
# get mean AQ based on all trials to use for AQ.mc later
AQ_means = mean(simondata$AQ)
AQ_means
View(simondata)
mean(simondata$AQ)
str(simondata)
mean(as.numeric(simondata$AQ))
simondata$AQ
library(lme4)
library(lmerTest)
library(simr)
m_bias_FB = mean(simondata$Bias[simondata$FBMem == "FB"])
mean(simondata$TrialNumber)
temp = as.numeric(simondata$TrialNumber)
temp
temp = as.numeric(simondata$AQ)
temp
mean(temp)
mean(temp,na.rm=TRUE)
simondata=read.csv("Full_simondata_set.csv")
View(simondata)
# Spreadsheet was too long for actual data
simondata = na.omit(simondata)
# get mean AQ based on all trials to use for AQ.mc later
AQ_means = mean(simondata$AQ)
# Libraries
library(lme4)
library(lmerTest)
library(simr)
m_bias_FB = mean(simondata$Bias[simondata$FBMem == "FB"])
sd_bias_FB = sd(simondata$Bias[simondata$FBMem == "FB"])
hi_FB = m_bias_FB + 3 * sd_bias_FB
lo_FB = m_bias_FB - 3 * sd_bias_FB
m_bias_Mem = mean(simondata$Bias[simondata$FBMem == "Mem"])
sd_bias_Mem = sd(simondata$Bias[simondata$FBMem == "Mem"])
hi_Mem = m_bias_Mem + 3 * sd_bias_Mem
lo_Mem = m_bias_Mem - 3 * sd_bias_Mem
simondata_FB = simondata[simondata$FBMem == "FB",]
simondata_Mem = simondata[simondata$FBMem == "Mem",]
simondata_FB_removed = simondata_FB[simondata_FB$Bias > hi_FB,]
simondata_FB = simondata_FB[simondata_FB$Bias < hi_FB,]
simondata_Mem_removed = simondata_Mem[simondata_Mem$Bias > hi_Mem,]
simondata_Mem = simondata_Mem[simondata_Mem$Bias < hi_Mem,]
# See which trials/scenarios are most frequently outliers
sort(simondata_FB_removed$TrialNumber)
sort(simondata_Mem_removed$TrialNumber)
simondata_new = rbind(simondata_FB,simondata_Mem)
simondata = simondata_new
simple.model1 = lm(Bias~FB..1..vs.MC.2.*ConRew,simondata)
summary(simple.model1)
simple.model2 = lm(Bias~FB..1..vs.MC.2.*ConRew + Age + Gender,simondata)
summary(simple.model2)
simple.model3 = lm(Bias~FB..1..vs.MC.2.*ConRew*AQ.mc + Age + Gender,simondata)
for (i in 1:length(simondata$AQ)){
simondata$AQ.mc[i] = simondata$AQ[i] - AQ_means
}
for (i in 1:length(simondata_before_removal$AQ)){
simondata_before_removal$AQ.mc[i] = simondata_before_removal$AQ[i] - AQ_means
}
# Model 1: same as Simon's model 3 but WITH interaction
#   includes
# - main effects of Condition and Reward
# - interaction between Condition and Reward
# - control variables Age and Gender
# - random effect for Condition|Participant
model1=lmer(Bias~FB..1..vs.MC.2.*ConRew
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata,REML=FALSE)
summary(model1)
# Model 1 conclusion:
# Condition = Sig; FB > MC [bias]
# Reward    = Sig; Pos > Neg
# Con*Rew   = Sig; Bias is higher for Negative
rm(list=ls())
setwd("C:/Users/ct886924/Documents/STUDIES/Study1_MT/Simon_data/Full_dataset")
simondata=read.csv("Full_simondata_set.csv")
# Spreadsheet was too long for actual data
simondata = na.omit(simondata)
# get mean AQ based on all trials to use for AQ.mc later
AQ_means = mean(simondata$AQ)
# Libraries
library(lme4)
library(lmerTest)
library(simr)
simondata_before_removal = simondata
model_before=lmer(Bias~FB..1..vs.MC.2.*ConRew
+Age
+Gender
+(1+FB..1..vs.MC.2.|ConRew)
+(1+FB..1..vs.MC.2.|Participant),simondata_before_removal,REML=FALSE)
summary(model_before)
m_bias_FB = mean(simondata$Bias[simondata$FBMem == "FB"])
sd_bias_FB = sd(simondata$Bias[simondata$FBMem == "FB"])
hi_FB = m_bias_FB + 3 * sd_bias_FB
lo_FB = m_bias_FB - 3 * sd_bias_FB
m_bias_Mem = mean(simondata$Bias[simondata$FBMem == "Mem"])
sd_bias_Mem = sd(simondata$Bias[simondata$FBMem == "Mem"])
hi_Mem = m_bias_Mem + 3 * sd_bias_Mem
lo_Mem = m_bias_Mem - 3 * sd_bias_Mem
simondata_FB = simondata[simondata$FBMem == "FB",]
simondata_Mem = simondata[simondata$FBMem == "Mem",]
simondata_FB_removed = simondata_FB[simondata_FB$Bias > hi_FB,]
simondata_FB = simondata_FB[simondata_FB$Bias < hi_FB,]
simondata_Mem_removed = simondata_Mem[simondata_Mem$Bias > hi_Mem,]
simondata_Mem = simondata_Mem[simondata_Mem$Bias < hi_Mem,]
# See which trials/scenarios are most frequently outliers
sort(simondata_FB_removed$TrialNumber)
sort(simondata_Mem_removed$TrialNumber)
simondata_new = rbind(simondata_FB,simondata_Mem)
simondata = simondata_new
model1=lmer(Bias~FB..1..vs.MC.2.*ConRew
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata,REML=FALSE)
summary(model1)
# Model 1 conclusion:
# Condition = Sig; FB > MC [bias]
# Reward    = Sig; Pos > Neg
# Con*Rew   = Sig; Bias is higher for Negative
model1_o=lmer(Bias~FB..1..vs.MC.2.*ConRew
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata_before_removal,REML=FALSE)
summary(model1_o)
model2=lmer(Bias~FB..1..vs.MC.2.*ConRew
+Age
+Gender
+(1+FB..1..vs.MC.2.|ConRew)
+(1+FB..1..vs.MC.2.|Participant),simondata,REML=FALSE)
summary(model2)
model2_o=lmer(Bias~FB..1..vs.MC.2.*ConRew
+Age
+Gender
+(1+FB..1..vs.MC.2.|ConRew)
+(1+FB..1..vs.MC.2.|Participant),simondata_before_removal,REML=FALSE)
summary(model2_o)
model3 = lmer(Bias~ConRew*FB..1..vs.MC.2.+Age+Gender+(
1+ConRew|Participant) + (1+ConRew|FB..1..vs.MC.2.),simondata,REML = FALSE)
summary(model3)
model3_O = lmer(Bias~ConRew*FB..1..vs.MC.2.+Age+Gender+(
1+ConRew|Participant) + (1+ConRew|FB..1..vs.MC.2.),simondata_before_removal,REML = FALSE)
summary(model3_O)
for (i in 1:length(simondata$AQ)){
simondata$AQ.mc[i] = simondata$AQ[i] - AQ_means
}
for (i in 1:length(simondata_before_removal$AQ)){
simondata_before_removal$AQ.mc[i] = simondata_before_removal$AQ[i] - AQ_means
}
# Model 4: with AQ, 1 random effect
model4=lmer(Bias~FB..1..vs.MC.2.*ConRew*AQ.mc
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata,REML=FALSE)
summary(model4)
model4_o=lmer(Bias~FB..1..vs.MC.2.*ConRew*AQ.mc
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata_before_removal,REML=FALSE)
summary(model4_o)
# Model 5: with AQ, 2 random effects
model5=lmer(Bias~FB..1..vs.MC.2.*ConRew*AQ.mc
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant)
+(1+ConRew|Participant),simondata,REML=FALSE)
summary(model5)
model5_o=lmer(Bias~FB..1..vs.MC.2.*ConRew*AQ.mc
+Age
+Gender
+(1+FB..1..vs.MC.2.|Participant)
+(1+ConRew|Participant),simondata_before_removal,REML=FALSE)
summary(model5_o)
# Model 6: four-way interaction of (Rew,Con,AQ,TrialNo)
model6=lmer(Bias~FB..1..vs.MC.2.*ConRew*TrialNumber*AQ +FB..1..vs.MC.2. +ConRew
+Age+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata,REML=FALSE)
summary(model6)
model6_o=lmer(Bias~FB..1..vs.MC.2.*ConRew*TrialNumber*AQ +FB..1..vs.MC.2. +ConRew
+Age+Gender
+(1+FB..1..vs.MC.2.|Participant),simondata_before_removal,REML=FALSE)
summary(model6_o)
simple.model1 = lm(Bias~FB..1..vs.MC.2.*ConRew,simondata)
summary(simple.model1)
simple.model2 = lm(Bias~FB..1..vs.MC.2.*ConRew + Age + Gender,simondata)
summary(simple.model2)
simple.model3 = lm(Bias~FB..1..vs.MC.2.*ConRew*AQ.mc + Age + Gender,simondata)
summary(simple.model3)
library(ggplot2)
# faulty
p <- ggplot(simondata, aes(x=FB..1..vs.MC.2., y=Bias, colour=ConRew)) +
geom_line(aes(y=predict(model4), group=Participant, size="Subjects")) +
geom_line(data=simondata, aes(y=predict(model4, level=0, newdata=simondata), size="Population")) +
scale_size_manual(name="Predictions", values=c("Subjects"=0.5, "Population"=3)) +
theme_bw(base_size=22)
print(p)
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2",summarise, mBias = mean(Bias)))
library(dplyr)
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2",summarise, mBias = mean(Bias)))
temp = dply(simondata, c("Participant","FB..1..vs.MC.2",summarise, mBias = mean(Bias)))
? ddply
library(plyr)
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2",summarise, mBias = mean(Bias)))
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2"),summarise, mBias = mean(Bias))
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2.",summarise, mBias = mean(Bias)))
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2."),summarise, mBias = mean(Bias)))
temp = ddply(simondata, c("Participant","FB..1..vs.MC.2."),summarise, mBias = mean(Bias))
View(temp)
participants_FB = ddply(simondata, c("Participant", "FB..1..vs.MC.2."), summarise, meanBias = mean(Bias))
View(participants_FB)
Means_participants = ddply(simondata, c("Participant", "FB..1..vs.MC.2."), summarise, meanBias = mean(Bias))
Participants_FB = Means_participants[Means_participants$FB..1..vs.MC.2. == 1,]
View(Participants_FB)
Participants_MC = Means_participants[Means_participants$FB..1..vs.MC.2. == 2,]
Participants_FB$isoutlier = rep(NA,length(Participants_FB$Participant))
simondata_backup = simondata
Means_participants = ddply(simondata, c("Participant", "FB..1..vs.MC.2."), summarise, meanBias = mean(Bias))
Participants_FB = Means_participants[Means_participants$FB..1..vs.MC.2. == 1,]
Participants_MC = Means_participants[Means_participants$FB..1..vs.MC.2. == 2,]
Participants_FB$isoutlier = rep(NA,length(Participants_FB$Participant))
Participants_FB = Means_participants[Means_participants$FB..1..vs.MC.2. == 1,]
Participants_MC = Means_participants[Means_participants$FB..1..vs.MC.2. == 2,]
Participants_FB$isoutlier = rep(NA,length(Participants_FB$Participant))
m_P_FB = mean(Participants_FB$meanBias)
sd_P_FB = sd(Participants_FB$meanBias)
hi_P_FB = m_P_FB + 3* sd_P_FB
lo_P_FB = m_P_FB - 3* sd_P_FB
for (i in 1:length(Participants_FB$meanBias)){
if Participants_FB$meanBias[i] < hi_P_FB & Participants_FB$meanBias[i] > lo_P_FB){
Participants_FB = Means_participants[Means_participants$FB..1..vs.MC.2. == 1,]
Participants_MC = Means_participants[Means_participants$FB..1..vs.MC.2. == 2,]
Participants_FB$isoutlier = rep(NA,length(Participants_FB$Participant))
m_P_FB = mean(Participants_FB$meanBias)
sd_P_FB = sd(Participants_FB$meanBias)
hi_P_FB = m_P_FB + 3* sd_P_FB
lo_P_FB = m_P_FB - 3* sd_P_FB
for (i in 1:length(Participants_FB$meanBias)){
if Participants_FB$meanBias[i] < hi_P_FB & Participants_FB$meanBias[i] > lo_P_FB){
1:length(Participants_FB$meanBias)
for (i in 1:length(Participants_FB$meanBias)){
if (Participants_FB$meanBias[i] < hi_P_FB & Participants_FB$meanBias[i] > lo_P_FB){
Participants_FB$isoutlier[i] = 0
} else {
Participants_FB$isoutlier[i] = 1
}
}
View(Participants_FB)
m_P_MC = mean(Participants_MC$meanBias)
sd_P_MC = sd(Participants_MC$meanBias)
hi_P_MC = m_P_MC + 3* sd_P_MC
lo_P_MC = m_P_MC - 3* sd_P_MC
for (i in 1:length(Participants_MC$meanBias)){
if (Participants_MC$meanBias[i] < hi_P_MC & Participants_MC$meanBias[i] > lo_P_MC){
Participants_MC$isoutlier[i] = 0
} else {
Participants_MC$isoutlier[i] = 1
}
}
View(Participants_MC)
# Remove outlier participant
simondata = simondata[simondata$Participant != 1]
# Remove outlier participant
simondata = simondata[simondata$Participant != 1,]
simple.model1 = lm(Bias~FB..1..vs.MC.2.*ConRew,simondata)
summary(simple.model1)
